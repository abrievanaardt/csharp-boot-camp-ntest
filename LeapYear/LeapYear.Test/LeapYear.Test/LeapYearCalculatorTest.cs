using System;
using Xunit;

namespace LeapYear.Test
{
    public class LeapYearCalculatorTest
    {

        private ILeapYearCalculator _leapYearCalculator;

        public LeapYearCalculatorTest()
        {
            _leapYearCalculator = new LeapYearCalculator();
        }
        

        [Theory]
        [InlineData(1804, true)]
        [InlineData(1808, true)]
        [InlineData(1812, true)]
        [InlineData(1816, true)]
        [InlineData(1820, true)]
        [InlineData(1824, true)]
        [InlineData(1828, true)]
        [InlineData(1832, true)]
        [InlineData(1836, true)]
        [InlineData(1840, true)]
        [InlineData(1844, true)]
        [InlineData(1848, true)]
        [InlineData(1852, true)]
        [InlineData(1856, true)]
        [InlineData(1860, true)]
        [InlineData(1864, true)]
        [InlineData(1868, true)]
        [InlineData(1872, true)]
        [InlineData(1876, true)]
        [InlineData(1880, true)]
        [InlineData(1884, true)]
        [InlineData(1888, true)]
        [InlineData(1892, true)]
        [InlineData(1896, true)]
        [InlineData(1904, true)]
        [InlineData(1908, true)]
        [InlineData(1912, true)]
        [InlineData(1916, true)]
        [InlineData(1920, true)]
        [InlineData(1924, true)]
        [InlineData(1928, true)]
        [InlineData(1932, true)]
        [InlineData(1936, true)]
        [InlineData(1940, true)]
        [InlineData(1944, true)]
        [InlineData(1948, true)]
        [InlineData(1952, true)]
        [InlineData(1956, true)]
        [InlineData(1960, true)]
        [InlineData(1964, true)]
        [InlineData(1968, true)]
        [InlineData(1972, true)]
        [InlineData(1976, true)]
        [InlineData(1980, true)]
        [InlineData(1984, true)]
        [InlineData(1988, true)]
        [InlineData(1992, true)]
        [InlineData(1996, true)]
        [InlineData(2000, true)]
        [InlineData(2004, true)]
        [InlineData(2008, true)]
        [InlineData(2012, true)]
        [InlineData(2016, true)]
        [InlineData(2020, true)]
        [InlineData(2024, true)]
        [InlineData(2028, true)]
        [InlineData(2032, true)]
        [InlineData(2036, true)]
        [InlineData(2040, true)]
        [InlineData(2044, true)]
        [InlineData(2048, true)]
        [InlineData(2052, true)]
        [InlineData(2056, true)]
        [InlineData(2060, true)]
        [InlineData(2064, true)]
        [InlineData(2068, true)]
        [InlineData(2072, true)]
        [InlineData(2076, true)]
        [InlineData(2080, true)]
        [InlineData(2084, true)]
        [InlineData(2088, true)]
        [InlineData(2092, true)]
        [InlineData(2096, true)]
        [InlineData(2104, true)]
        [InlineData(2108, true)]
        [InlineData(2112, true)]
        [InlineData(2116, true)]
        [InlineData(2120, true)]
        [InlineData(2124, true)]
        [InlineData(2128, true)]
        [InlineData(2132, true)]
        [InlineData(2136, true)]
        [InlineData(2140, true)]
        [InlineData(2144, true)]
        [InlineData(2148, true)]
        [InlineData(2152, true)]
        [InlineData(2156, true)]
        [InlineData(2160, true)]
        [InlineData(2164, true)]
        [InlineData(2168, true)]
        [InlineData(2172, true)]
        [InlineData(2176, true)]
        [InlineData(2180, true)]
        [InlineData(2184, true)]
        [InlineData(2188, true)]
        [InlineData(2192, true)]
        [InlineData(2196, true)]
        [InlineData(2204, true)]
        [InlineData(2208, true)]
        [InlineData(2212, true)]
        [InlineData(2216, true)]
        [InlineData(2220, true)]
        [InlineData(2224, true)]
        [InlineData(2228, true)]
        [InlineData(2232, true)]
        [InlineData(2236, true)]
        [InlineData(2240, true)]
        [InlineData(2244, true)]
        [InlineData(2248, true)]
        [InlineData(2252, true)]
        [InlineData(2256, true)]
        [InlineData(2260, true)]
        [InlineData(2264, true)]
        [InlineData(2268, true)]
        [InlineData(2272, true)]
        [InlineData(2276, true)]
        [InlineData(2280, true)]
        [InlineData(2284, true)]
        [InlineData(2288, true)]
        [InlineData(2292, true)]
        [InlineData(2296, true)]
        [InlineData(2304, true)]
        [InlineData(2308, true)]
        [InlineData(2312, true)]
        [InlineData(2316, true)]
        [InlineData(2320, true)]
        [InlineData(2324, true)]
        [InlineData(2328, true)]
        [InlineData(2332, true)]
        [InlineData(2336, true)]
        [InlineData(2340, true)]
        [InlineData(2344, true)]
        [InlineData(2348, true)]
        [InlineData(2352, true)]
        [InlineData(2356, true)]
        [InlineData(2360, true)]
        [InlineData(2364, true)]
        [InlineData(2368, true)]
        [InlineData(2372, true)]
        [InlineData(2376, true)]
        [InlineData(2380, true)]
        [InlineData(2384, true)]
        [InlineData(2388, true)]
        [InlineData(2392, true)]
        [InlineData(2396, true)]
        [InlineData(2400, true)]  
        public void LeapYearPositiveTest(long year, bool expectedResult)
        {
            Assert.Equal(expectedResult, _leapYearCalculator.IsLeapYear(year));
        }

        [Theory]
        [InlineData(1900, false)]
        [InlineData(1910, false)]
        [InlineData(2001, false)]
        public void LeapYearNegativeTest(long year, bool expectedResult)
        {
            Assert.Equal(expectedResult, _leapYearCalculator.IsLeapYear(year));
        }
    }
}
